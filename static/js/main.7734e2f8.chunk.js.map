{"version":3,"sources":["Components/Circle.tsx","Components/BinaryClock.tsx","index.tsx"],"names":["Circle","styled","div","prop","opacity","active","Container","Circles","num","circles","bin","binary","split","length","Array","fill","concat","slice","index","push","UnitContainer","Wrapper","TimeUnit","dimension","first","second","BinaryClock","useState","Date","date","setDate","dec2bin","dec","Number","toString","hour","getHours","minutes","getMinutes","seconds","getSeconds","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAQMA,EAASC,IAAOC,IAAV,oQAKC,SAACC,GAAD,OAAUA,EAAKC,WACZ,SAACD,GAAD,OAAWA,EAAKE,OAAS,SAAW,UAU9CC,EAAYL,IAAOC,IAAV,yEA+BAK,EArBC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,IACXC,EAAU,GACZC,EAF6C,EAA3BC,OAELC,MAAM,IAGnBF,EAAIG,SAAWL,IACjBE,EAAMI,MAAM,GAAGC,KAAK,KAAKC,OAAON,GAAKO,MAAMP,EAAIG,SAGjD,IAAK,IAAIK,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BT,EAAQU,KACN,cAACnB,EAAD,CACEK,OAAuB,MAAfK,EAAIQ,GACZd,QAAiB,IAARI,GAAaU,EAAQV,EAAM,EAAI,KAK9C,OAAO,cAACF,EAAD,UAAYG,KC/CfW,EAAgBnB,IAAOC,IAAV,uFAMbmB,EAAUpB,IAAOC,IAAV,wIAkBPoB,EAAW,SAAC,GAAsC,IAApCX,EAAmC,EAAnCA,OAAQY,EAA2B,EAA3BA,UAC1B,OACE,eAACH,EAAD,WACE,cAAC,EAAD,CAAST,OAAQA,EAAOa,MAAOhB,IAAKe,EAAU,KAC9C,cAAC,EAAD,CAASZ,OAAQA,EAAOc,OAAQjB,IAAKe,EAAU,SA2CtCG,EAtCS,WACtB,MAAwBC,mBAAe,IAAIC,MAA3C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAU,SAACC,GACf,OAAQC,OAAOD,KAAS,GAAGE,SAAS,IAGhCC,EAAO,CACXX,MAAOO,EAAQF,EAAKO,WAAWF,WAAWtB,MAAM,IAAI,IACpDa,OAAQM,EAAQF,EAAKO,WAAWF,WAAWtB,MAAM,IAAI,KAGjDyB,EAAU,CACdb,MAAOO,EAAQF,EAAKS,aAAaJ,WAAWtB,MAAM,IAAI,IACtDa,OAAQM,EAAQF,EAAKS,aAAaJ,WAAWtB,MAAM,IAAI,KAGnD2B,EAAU,CACdf,MAAOO,EAAQF,EAAKW,aAAaN,WAAWtB,MAAM,IAAI,IACtDa,OAAQM,EAAQF,EAAKW,aAAaN,WAAWtB,MAAM,IAAI,KAOzD,OAJA6B,aAAY,WACVX,EAAQ,IAAIF,QACX,KAGD,eAACP,EAAD,WAEE,cAAC,EAAD,CAAUV,OAAQwB,EAAOZ,UAAW,CAAC,EAAG,KAExC,cAAC,EAAD,CAAUZ,OAAQ0B,EAAUd,UAAW,CAAC,EAAG,KAE3C,cAAC,EAAD,CAAUZ,OAAQ4B,EAAUhB,UAAW,CAAC,EAAG,S,MC/DjDmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7734e2f8.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface CircleProps {\n  active: boolean;\n  opacity: number;\n}\n\nconst Circle = styled.div<CircleProps>`\n  height: 50px;\n  width: 50px;\n  margin: 15px;\n  border-radius: 25px;\n  opacity: ${(prop) => prop.opacity};\n  background: ${(prop) => (prop.active ? \"green \" : \"gray\")};\n\n  @media (max-width: 768px) {\n    height: 25px;\n    width: 25px;\n    margin: 5px;\n    border-radius: 12.5px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface CirclesProps {\n  num: number;\n  binary: string;\n}\n\nconst Circles = ({ num, binary }: CirclesProps) => {\n  const circles = [];\n  let bin = binary.split(\"\");\n\n  // Pad Array with 0s\n  if (bin.length !== num) {\n    bin = Array(4).fill(\"0\").concat(bin).slice(bin.length);\n  }\n\n  for (let index = 0; index < 4; index++) {\n    circles.push(\n      <Circle\n        active={bin[index] === \"1\"}\n        opacity={num !== 4 && index < num ? 0 : 1}\n      />\n    );\n  }\n\n  return <Container>{circles}</Container>;\n};\n\nexport default Circles;\n","import React, { FC, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Circles from \"./Circle\";\n\nconst UnitContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 20px;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  place-items: center;\n`;\n\ninterface IBinaryTime {\n  first: string;\n  second: string;\n}\n\ninterface ITimeUnit {\n  binary: IBinaryTime;\n  dimension: number[];\n}\n\nconst TimeUnit = ({ binary, dimension }: ITimeUnit) => {\n  return (\n    <UnitContainer>\n      <Circles binary={binary.first} num={dimension[0]}></Circles>\n      <Circles binary={binary.second} num={dimension[1]}></Circles>\n    </UnitContainer>\n  );\n};\n\nconst BinaryClock: FC = () => {\n  const [date, setDate] = useState<Date>(new Date());\n\n  const dec2bin = (dec: string) => {\n    return (Number(dec) >>> 0).toString(2);\n  };\n\n  const hour = {\n    first: dec2bin(date.getHours().toString().split(\"\")[0]),\n    second: dec2bin(date.getHours().toString().split(\"\")[1]),\n  };\n\n  const minutes = {\n    first: dec2bin(date.getMinutes().toString().split(\"\")[0]),\n    second: dec2bin(date.getMinutes().toString().split(\"\")[1]),\n  };\n\n  const seconds = {\n    first: dec2bin(date.getSeconds().toString().split(\"\")[0]),\n    second: dec2bin(date.getSeconds().toString().split(\"\")[1]),\n  };\n\n  setInterval(() => {\n    setDate(new Date());\n  }, 2000);\n\n  return (\n    <Wrapper>\n      {/* Hour */}\n      <TimeUnit binary={hour!} dimension={[2, 4]} />\n      {/* Minutes */}\n      <TimeUnit binary={minutes!} dimension={[4, 4]} />\n      {/* Seconds */}\n      <TimeUnit binary={seconds!} dimension={[4, 4]} />\n    </Wrapper>\n  );\n};\n\nexport default BinaryClock;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nimport BinaryClock from \"./Components/BinaryClock\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BinaryClock />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}